mon_names = [
    "Hildebear",
    "Hildeblue",
    "Rag Rappy",
    "Al Rappy",
    "Monest",
    "Booma",
    "Gobooma",
    "Gigobooma",
    "Savage Wolf",
    "Barbarous Wolf",
    "Grass Assassin",
    "Poison Lily",
    "Nar Lily",
    "Nano Dragon",
    "Evil Shark",
    "Pal Shark",
    "Guil Shark",
    "Pofuilly Slime",
    "Pouilly Slime",
    "Pan Arms",
    "Migium",
    "Hidoom",
    "Gillchic",
    "Dubchic",
    "Garanz",
    "Sinow Beat",
    "Sinow Gold",
    "Canadine",
    "Canane",
    "Dubwitch",
    "Delsaber",
    "Chaos Sorcerer",
    "Dark Gunner",
    "Death Gunner",
    "Chaos Bringer",
    "Dark Belra",
    "Dimenian",
    "La Dimenian",
    "So Dimenian",
    "Bulclaw",
    "Claw",
    "Dragon",
    "Gal Gryphon",
    "De Rol Le",
    "Vol Opt",
    "Dark Falz",
    "Olga Flow",
    "Barba Ray",
    "Gol Dragon",
    "Love Rappy",
    "Sinow Berill",
    "Sinow Spigell",
    "Merillia",
    "Meriltas",
    "Mericus",
    "Merikle",
    "Mericarol",
    "Ul Gibbon",
    "Zol Gibbon",
    "Gibbles",
    "Gee",
    "Gi Gue",
    "Deldepth",
    "Delbiter",
    "Dolmolm",
    "Dolmdarl",
    "Morfos",
    "Recobox",
    "Recon",
    "Sinow Zoa",
    "Sinow Zele",
    "Epsilon",
    "Del Lily",
    "Ill Gill",
    "Astark",
    "Satellite Lizard",
    "Yowie",
    "Merissa A",
    "Merissa AA",
    "Girtablulu",
    "Zu",
    "Pazuzu",
    "Boota",
    "Ze Boota",
    "Ba Boota",
    "Dorphon",
    "Dorphon Eclair",
    "Goran",
    "Pyro Goran",
    "Goran Detonator",
    "Saint-Milion",
    "Shambertin",
    "Kondrieu",
    "Unknown",
    "Ignore"
]

output = ""

def transform_name(name):
    return "MON_" + name.upper().replace(" ", "_").replace("-", "_")

def wrap_guard():
    global output
    guard = "// Generated by %s\n\n" % __file__
    guard += "#ifndef YAQP_MON_H\n"
    guard += "#define YAQP_MON_H\n\n"
    output = guard + output
    output += "#endif\n"

def make_kind_enum():
    global output
    num_names = len(mon_names)
    output += "typedef enum {\n"
    for i in range(0, num_names - 1):
        output += "    %s,\n" % transform_name(mon_names[i])
    output += "    %s\n" % transform_name(mon_names[num_names - 1])
    output += "} mon_kind;\n\n"

def make_name_map():
    global output
    num_names = len(mon_names)
    output += "#define NUM_NPCS %d\n" % num_names
    output += "const char* const npc_names[NUM_NPCS] = {\n"
    for i in range(0, num_names - 1):
        name = mon_names[i]
        output += "    [%s] = \"%s\",\n" % (transform_name(name), name)
    last_name = mon_names[num_names - 1]
    output += "    [%s] = \"%s\"\n" % (transform_name(last_name), last_name)
    output += "};\n\n"

make_kind_enum()
make_name_map()
wrap_guard()

print(output)
