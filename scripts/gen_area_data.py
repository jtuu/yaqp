import re

ep1_area_names = [
    "Pioneer 2",
    "Forest 1",
    "Forest 2",
    "Caves 1",
    "Caves 2",
    "Caves 3",
    "Mines 1",
    "Mines 2",
    "Ruins 1",
    "Ruins 2",
    "Ruins 3",
    "Under the Dome",
    "Underground Channel",
    "Monitor Room",
    "????",
    "Visual Lobby",
    "Spaceship",
    "Temple"
]

ep2_area_names = [
    "Lab",
    "VR Temple Alpha",
    "VR Temple Beta",
    "VR Spaceship Alpha",
    "VR Spaceship Beta",
    "Central Control Area",
    "Jungle North",
    "Jungle East",
    "Mountain",
    "Seaside",
    "Seabed Upper",
    "Seabed Lower",
    "Gal Gryphon",
    "Olga Flow",
    "Barba Ray",
    "Gol Dragon",
    "Seaside Night",
    "Tower"
]

ep4_area_names = [
    "Pioneer 2",
    "Crater East",
    "Crater West",
    "Crater South",
    "Crater North",
    "Crater Interior",
    "Subterranean Desert 1",
    "Subterranean Desert 2",
    "Subterranean Desert 3",
    "Meteor Impact Site",
    "Caves 2"
]

output = ""

replace_pat = re.compile(r"(\W)")
def transform_name(ep, name):
    return ("EP%d_" % ep) + re.sub(replace_pat, "_", name.upper())

def wrap_guard():
    global output
    guard = "// Generated by %s\n\n" % __file__
    guard += "#ifndef YAQP_AREA_H\n"
    guard += "#define YAQP_AREA_H\n\n"
    output = guard + output
    output += "#endif\n"

def make_area_enum(ep, names):
    global output
    num_names = len(names)
    output += "typedef enum {\n"
    for i in range(0, num_names - 1):
        output += "    %s,\n" % transform_name(ep, names[i])
    output += "    %s\n" % transform_name(ep, names[num_names - 1])
    output += "} ep%d_area;\n\n" % ep

def make_name_map(ep, names):
    global output
    num_names = len(names)
    def_name = "NUM_EP%d_AREAS" % ep
    output += "#define %s %d\n" % (def_name, num_names)
    output += "const char* const ep%d_area_names[%s] = {\n" % (ep, def_name)
    for i in range(0, num_names - 1):
        name = names[i]
        output += "    [%s] = \"%s\",\n" % (transform_name(ep, name), name)
    last_name = names[num_names - 1]
    output += "    [%s] = \"%s\"\n" % (transform_name(ep, last_name), last_name)
    output += "};\n\n"

make_area_enum(1, ep1_area_names)
make_area_enum(2, ep2_area_names)
make_area_enum(4, ep4_area_names)
make_name_map(1, ep1_area_names)
make_name_map(2, ep2_area_names)
make_name_map(4, ep4_area_names)
wrap_guard()

print(output)
